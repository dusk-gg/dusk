import{t as e}from"./logic.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const t=document.getElementById("game-canvas"),n=t.getContext("2d");function o(e,t,n){return new Promise(((o,i)=>{const r=new Image;r.src=e,r.addEventListener("load",(()=>{console.log("Loaded: "+e),o({image:r,tilesAcross:Math.floor(r.width/t),tileWidth:t,tileHeight:n})})),r.addEventListener("error",(()=>{i("Failed to load: "+e)}))}))}function i(e,t,o,i,r=!1){const s=i%o.tilesAcross*o.tileWidth,a=Math.floor(i/o.tilesAcross)*o.tileHeight;n.save(),n.translate(e,t),r&&(n.translate(o.tileWidth,0),n.scale(-1,1)),n.drawImage(o.image,s,a,o.tileWidth,o.tileHeight,0,0,o.tileWidth,o.tileHeight),n.restore()}t.width=window.innerWidth,t.height=window.innerHeight;var r=""+new URL("assets/Tilemap_Elevation-DpQQtPTs.png",import.meta.url).href,s=""+new URL("assets/Tilemap_Flat-QbfVtReL.png",import.meta.url).href,a=""+new URL("assets/Tree-Cq00eInk.png",import.meta.url).href,l=""+new URL("assets/Warrior_Blue-CGBrIkl-.png",import.meta.url).href,d=""+new URL("assets/Warrior_Purple-BxseoyR5.png",import.meta.url).href,c=""+new URL("assets/Warrior_Red-DB8I8HT_.png",import.meta.url).href,u=""+new URL("assets/Warrior_Yellow-Doe8EE8i.png",import.meta.url).href;const h={left:!1,right:!1,up:!1,down:!1},f="ontouchstart"in document.documentElement,w=document.getElementById("controls");let g=!1;function m(e,t){const n=w.getBoundingClientRect(),o=-1+Math.floor((e-n.left)/(n.width/3)),i=-1+Math.floor((t-n.top)/(n.height/3));h.left=-1==o,h.right=1==o,h.up=-1==i,h.down=1==i}function p(){h.left=!1,h.right=!1,h.up=!1,h.down=!1}f?(w.addEventListener("touchstart",(e=>{m(e.touches[0].clientX,e.touches[0].clientY)})),w.addEventListener("touchmove",(e=>{m(e.touches[0].clientX,e.touches[0].clientY)})),window.addEventListener("touchend",(()=>{p()}))):(w.addEventListener("mousedown",(e=>{m(e.clientX,e.clientY),g=!0})),w.addEventListener("mousemove",(e=>{g&&m(e.clientX,e.clientY)})),window.addEventListener("mouseup",(()=>{p(),g=!1})),window.addEventListener("keydown",(e=>{h.left="ArrowLeft"===e.key||"a"===e.key||h.left,h.right="ArrowRight"===e.key||"d"==e.key||h.right,h.up="ArrowUp"===e.key||"w"===e.key||h.up,h.down="ArrowDown"===e.key||"s"==e.key||h.down})),window.addEventListener("keyup",(e=>{h.left="ArrowLeft"!==e.key&&"a"!==e.key&&h.left,h.right="ArrowRight"!==e.key&&"d"!=e.key&&h.right,h.up="ArrowUp"!==e.key&&"w"!==e.key&&h.up,h.down="ArrowDown"!==e.key&&"s"!=e.key&&h.down}))),(async()=>{const t=await o(r,64,64),f=await o(s,64,64),w=await o(a,192,192),g=[await o(l,192,192),await o(d,192,192),await o(c,192,192),await o(u,192,192),w],m=[96,125],p=[95,170];let y,L,k={left:!1,right:!1,down:!1,up:!1},v=0;function E(){requestAnimationFrame((()=>{!function(){Date.now()-v>100&&(h.left!==k.left||h.right!==k.right||h.up!==k.up||h.down!==k.down)&&(k={...h},v=Date.now(),Dusk.actions.controls(k));if(E(),n.save(),n.fillStyle="#409c9b",n.fillRect(0,0,n.canvas.width,n.canvas.height),L){const e=y.entities.find((e=>e.playerId===L));e&&n.translate(-e.x+Math.floor(n.canvas.width/2),-e.y+Math.floor(n.canvas.height/2))}for(let n=e.length-1;n>=0;n--){const o=e[n];for(let r=0;r<o.length;r++){const s=o[r];if(s>=20){const o=s-20;i(64*r,64*n,t,16+o),i(64*r,64*(n+1),t,20+o),n!==e.length-1&&-1!==e[n+1][r]||i(64*r,64*(n+2),t,24+o)}i(64*r,64*n,f,s)}}if(y){const e=Math.floor(Dusk.gameTime()/100)%6;[...y.entities].sort(((e,t)=>e.y-t.y)).forEach((t=>{if("PLAYER"===t.type){const n=t;i(n.x-m[0],n.y-m[1],g[n.sprite],n.animation+e,n.flipped)}else i(t.x-p[0],t.y-p[1],g[t.sprite],0)}))}n.restore()}()}))}Dusk.initClient({onChange:({game:e,yourPlayerId:t})=>{L=t,y=e}}),E()})();